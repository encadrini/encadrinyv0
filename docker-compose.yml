# Docker Compose file for the backend service with PostgreSQL

services:
  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=${DATABASE_URL}
    volumes:
      - ./backend:/app # Ensure source code is mounted
      - ./prisma/migrations:/app/prisma/migrations
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy # Wait until PostgreSQL is ready
    networks:
      - app-network
    ports:
      - "3100:3100" # Expose the application on port 3100

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: encadrinyv01
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d encadrinyv01"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

volumes:
  postgres-data:

networks:
  app-network:
    driver: bridge
