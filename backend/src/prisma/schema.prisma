// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    Int                     @id @default(autoincrement())
  username              String
  email                 String                  @unique
  password              String
  role                  Role                    @default(ETUDIANT)
  project               Project[]
  EncadrantTechnologies EncadrantTechnologies[]
  Collaborators         Collaborators[]
  Feedbacks             Feedbacks[]
}

model Collaborators {
  userId    Int
  User      User    @relation(fields: [userId], references: [id])
  projectId String
  Project   Project @relation(fields: [projectId], references: [id])

  @@unique([userId, projectId])
}

model Feedbacks {
  id         String   @id @default(uuid())
  msg        String
  createdAt  DateTime @default(now())
  etudiantId Int
  Etudiant   User     @relation(fields: [userId], references: [id])
  projectId  String
  Project    Project  @relation(fields: [projectId], references: [id])
  userId     Int
}

model Project {
  id                  String                @id @default(uuid())
  title               String
  description         String
  Encadrant           User?                  @relation(fields: [encadrantId], references: [id])
  encadrantId         Int?
  ProjectTechnologies ProjectTechnologies[]
  Collaborators       Collaborators[]
  Feedbacks           Feedbacks[]
}

model EncadrantTechnologies {
  encadrantId  Int
  Encadrant    User       @relation(fields: [encadrantId], references: [id])
  technologyId String
  Technology   Technology @relation(fields: [technologyId], references: [id])

  @@unique([encadrantId, technologyId])
}

model ProjectTechnologies {
  projectId    String
  Project      Project    @relation(fields: [projectId], references: [id])
  technologyId String
  Technology   Technology @relation(fields: [technologyId], references: [id])

  @@unique([projectId, technologyId])
}

model Technology {
  id                    String                  @id @default(uuid())
  title                 String
  EncadrantTechnologies EncadrantTechnologies[]
  ProjectTechnologies   ProjectTechnologies[]
}

enum Role {
  ENCADRANT
  ETUDIANT
}
